name: build-swoole-cli-linux-x86_64

on: [ push, pull_request ]

jobs:
  linux-x86_64:
    if: 1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Prepare Source Code
        run: |
          echo $PATH
          env
          docker info
          id -u
          id -g
          who
          cat /etc/os-release
          hostnamectl
          uname -s
          uname -m
          uname -r

          cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c
          cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l
          cat /proc/cpuinfo | grep "cpu cores" | uniq
          cat /proc/cpuinfo| grep "processor"| wc -l
          lscpu

          export IPV6=$(ip -6 address show  | grep inet6 | awk '{print $2}' | cut -d'/' -f1 | sed -n '2p')
          export IPV4=$(ip -4 address show  | grep inet | grep -v 127.0.0 | awk '{print $2}' | cut -d'/' -f1 | sed -n '1p')
          echo $IPV4
          echo $IPV6
          echo "X_IPV6=${IPV6}" >> $GITHUB_ENV
          echo "X_IPV4=${IPV4}" >> $GITHUB_ENV

          git submodule update --init

          # 准备数据库容器
          bash sapi/src/UnitTest/scripts/database/start.sh

          sudo mkdir -p /usr/local/swoole-cli
          uid=$(id -u) && gid=$(id -g) && sudo chown -R ${uid}:${gid} /usr/local/swoole-cli

          mkdir -p ${{ github.workspace }}/var/build-github-action-container/

      - name: Cache PHP Runtime
        uses: actions/cache@v3
        id: php-runtime-cache
        with:
          path: ${{ github.workspace }}/bin/runtime
          key: ${{ runner.os }}-x86_64-php-runtime

      - name: Cache PHP Vendor
        uses: actions/cache@v3
        id: php-vendor-cache
        with:
          path: ${{ github.workspace }}/vendor
          key: ${{ runner.os }}-x86_64-php-vendor

      - name: Cache Dependency Source Code Tarball
        uses: actions/cache@v3
        id: dependency-cache
        with:
          path: ${{ github.workspace }}/pool/
          key: ${{ github.head_ref || github.ref_name }}-${{ runner.os }}-x86_64-pool

      - name: Cache all-library
        uses: actions/cache@v3
        id: all-library-cache
        with:
          path: /usr/local/swoole-cli
          key: ${{ github.head_ref || github.ref_name }}-${{ runner.os }}-x86_64-all-library

      - name: Cache swoole-cli-builder-image
        uses: actions/cache@v3
        id: swoole-cli-builder-image-cache
        with:
          path: ${{ github.workspace }}/var/build-github-action-container/swoole-cli-builder-image.tar
          key: ${{ runner.os }}-x86_64-swoole-cli-builder-image

      - name: Prepare swoole-cli-builder-image
        run: |
          if [ -f ${{ github.workspace }}/var/build-github-action-container/swoole-cli-builder-image.tar ] ; then
              docker load -i  ${{ github.workspace }}/var/build-github-action-container/swoole-cli-builder-image.tar
          else
              bash .github/workflows/build-alpine-builder-container.sh
          fi

      - name: Prepare Runtime and Libraries and Extensions
        run: |
          set -x
          mkdir -p pool/lib
          mkdir -p pool/ext
          mkdir -p bin/runtime
          if [ ! -f bin/runtime/php ] ; then
              bash  setup-php-runtime.sh
          fi
          if test $(ls -A pool/lib/ | wc -l) -eq 0 ; then
              bash sapi/download-box/download-box-get-archive-from-container.sh
          fi

          if test $(ls -A /usr/local/swoole-cli/ | wc -l) -eq 0 ; then
              IMAGE="docker.io/jingjingxyk/build-swoole-cli:all-dependencies-alpine-3.17-php8-v1.0.0-x86_64-20230614T150918Z"

              container_id=$(docker create $IMAGE) # returns container ID
              docker cp $container_id:/usr/local/swoole-cli/ /usr/local/
              docker rm $container_id

              rm -rf /usr/local/swoole-cli/libwebp

          fi
          ls -A /usr/local/swoole-cli/

      - name: Build
        uses: addnab/docker-run-action@v3
        with:
          # image: docker.io/jingjingxyk/build-swoole-cli:all-dependencies-alpine-3.17-php8-v1.0.0-x86_64-20230614T150918Z
          image: swoole-cli-builder:latest
          options: -v ${{ github.workspace }}:/work -w /work -e BUILD_PHP_VERSION=${{ env.BUILD_PHP_VERSION }} -v /usr/local/swoole-cli:/usr/local/swoole-cli
          run: |
            set -eux
            uname -m
            export PATH=/work/bin/runtime:$PATH  # 容器已经内置 php 和 composer
            alias php="php -d curl.cainfo=/work/bin/runtime/cacert.pem -d openssl.cafile=/work/bin/runtime/cacert.pem"

            sh  sapi/quickstart/linux/alpine-init.sh --mirror ""
            composer update   --optimize-autoloader

            php prepare.php  +inotify +apcu +ds +xlswriter +ssh2  --with-swoole-pgsql=1

            bash ./make.sh all-library

            bash ./make.sh config
            bash ./make.sh build
            bash ./make.sh archive

      - name: Show Build Result
        run: |
          ./bin/swoole-cli -v
          ./bin/swoole-cli -m
          ./bin/swoole-cli --ri swoole
          file ./bin/swoole-cli
          readelf -h ./bin/swoole-cli
          ./bin/swoole-cli -r "echo PHP_VERSION;"
          ./bin/swoole-cli ./vendor/bin/phpunit ./sapi/src/UnitTest/MainTest.php  --list-tests
          ./bin/swoole-cli ./vendor/bin/phpunit ./sapi/src/UnitTest/MainTest.php
          ./bin/swoole-cli ./vendor/bin/phpunit ./sapi/src/UnitTest/SwoolePGSQLTest.php

      - name: production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: swoole-cli
          retention-days: 7
          path: ./bin/swoole-cli

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: swoole-cli-*-linux-x64.tar.xz
