name: build-php-cli-windows-cygwin

on:
  push:
  pull_request:

env:
  BUILD_PHP_VERSION: 8.2.28

jobs:
  windows-cygwin:
    if: 1
    runs-on: windows-2022
    strategy:
      matrix:
        php-version:
          - "8.2.28"
          - "8.1.32"
          - "8.3.19"
          - "8.4.5"
    steps:
      - name: Show Environment Info
        shell: cmd
        run: |
          ver
          wmic cpu get name, caption, maxclockspeed, status
          systeminfo
          systeminfo | findstr /B /C:"OS Name" /C:"OS Version"
          systeminfo | findstr /B /C:"Manufacturer" /C:"Product" /C:"Version"
          set
          ipconfig
          uname -a
          pwd
          ipconfig /all

      - name: Prepare git
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
          git config --global core.ignorecase false
          git config --global --add safe.directory ${{ github.workspace }}
          ipconfig

      - uses: actions/checkout@v4
      - name: set php version
        # 参考文档：  https://docs.github.com/zh/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsshell
        shell: bash
        run: |
          echo "BUILD_PHP_VERSION=${{ matrix.php-version }}" >> $GITHUB_ENV

      - name: Cache cygwin packages
        id: cache-cygwin
        uses: actions/cache@v4
        env:
          cache-name: cache-cygwin-packages
        with:
          path: C:\cygwin-packages
          key: "${{ runner.os }}-build-${{ env.cache-name }}"

      - name: Cache pool
        id: cache-cygwin-pool
        uses: actions/cache@v4
        with:
          path: "${{ github.workspace }}\\pool\\"
          key: "${{ runner.os }}-build-pool-cache"

      - name: Install Cygwin
        uses: cygwin/cygwin-install-action@v2
        with:
          site: https://mirrors.kernel.org/sourceware/cygwin/
        # with:
        #  platform: x64
        #  packages: make wget tar libtool re2c bison gcc-g++ autoconf automake openssl libpcre2-devel libssl-devel libcurl-devel libxml2-devel libxslt-devel libgmp-devel ImageMagick libpng-devel libjpeg-devel libfreetype-devel libwebp-devel libsqlite3-devel zlib-devel libbz2-devel liblz4-devel liblzma-devel libzip-devel libicu-devel libonig-devel libcares-devel libsodium-devel libyaml-devel libMagick-devel libzstd-devel libbrotli-devel libreadline-devel  libintl-devel libpq-devel libssh2-devel libidn2-devel gettext-devel coreutils openssl-devel zip unzip

      - name: Install Cygwin Packages with bash
        if: 0
        shell: C:\cygwin\bin\bash.EXE --noprofile --norc -e -o pipefail -o igncr   {0}
        run: |
          ls -lah /cygdrive/c/
          ls -lah /cygdrive/d/
          cp -f /cygdrive/c/setup.exe  /cygdrive/c/cygwin/bin/setup-x86_64.exe
          bash ./sapi/scripts/cygwin/install-cygwin.sh

      - name: Install Cygwin Packages with powershell
        # 备注：github action 在 windows 上执行命令默认的 shell 是 powershell，如果要使用其它shell , 需要手动指定，例如此也可以使用 bash 来安装 cygwin packages
        if: 1
        run: |
          Copy-Item -Path "C:\setup.exe" -Destination "${{ github.workspace }}\setup-x86_64.exe"
          cmd /c .\sapi\quickstart\windows\cygwin-build\install-cygwin.bat

      - name: Install re2c
        shell: C:\cygwin\bin\bash.EXE --noprofile --norc -e -o pipefail -o igncr   {0}
        run: |
          bash ./sapi/scripts/cygwin/install-re2c.sh

      - name: install deps lib with source code
        if: 0
        shell: C:\cygwin\bin\bash.EXE --noprofile --norc -e -o pipefail -o igncr   {0}
        run: |
          bash ./sapi/scripts/msys2/install-libzip.sh

      - name: Prepare
        shell: C:\cygwin\bin\bash.EXE --noprofile --norc -e -o pipefail -o igncr   {0}
        run: |
          # git config --global --add safe.directory /cygdrive/d/a/swoole-cli/swoole-cli
          bash ./sapi/scripts/cygwin/cygwin-config-ext.sh --php-version ${{ env.BUILD_PHP_VERSION }} --swoole-version master

      - name: Configure
        shell: C:\cygwin\bin\bash.EXE --noprofile --norc -e -o pipefail -o igncr   {0}
        run: |
          bash ./sapi/scripts/cygwin/cygwin-config.sh --php-version ${{ env.BUILD_PHP_VERSION }}

      - name: Build
        shell: C:\cygwin\bin\bash.EXE --noprofile --norc -e -o pipefail -o igncr   {0}
        run: |
          bash ./sapi/scripts/cygwin/cygwin-build.sh

      - name: Archive
        run: |
          bash ./sapi/scripts/cygwin/cygwin-archive.sh

      - name: Show Build Result
        run: |
          ./bin/php.exe -v
          ./bin/php.exe -m
          ./bin/php.exe --ri mongodb
          ./bin/php.exe --ri gd
          ./bin/php.exe --ri swoole
          ./bin/php.exe  -r "echo PHP_VERSION;"
          ldd ./bin/php.exe

      - name: get app version with bash
        # 参考 https://github.com/marketplace/actions/install-cygwin
        shell: C:\cygwin\bin\bash.EXE --noprofile --norc -e -o pipefail -o igncr   {0}
        # shell: C:\cygwin\bin\bash.EXE --login --noprofile --norc -e -o pipefail -o igncr   {0}
        run: |
          ./bin/php.exe  -v | awk '{print $2}'

          APP_VERSION=$(./bin/php.exe  -v | head -n 1 | awk '{print $2}')
          echo $APP_VERSION
          echo "APP_VERSION=${APP_VERSION}" >> $GITHUB_ENV

      - name: get app version with PowerShell
        run: |
          ./bin/php.exe  -v
          $cmdOutput=./bin/php.exe  -v
          $cmdOutput=$cmdOutput | select -first 1
          $cmdOutput -match "(\d{1,2}\.\d{1,2}\.\d{1,2})"
          $CYGWIN_APP_VERSION=$Matches[1]
          echo $CYGWIN_APP_VERSION
          echo "CYGWIN_APP_VERSION=$CYGWIN_APP_VERSION" >> $Env:GITHUB_ENV

          # 参考 https://github.com/orgs/community/discussions/26641
          # echo "APP_VERSION=${APP_VERSION}" >> $Env:GITHUB_ENV
          # echo "APP_VERSION=$APP_VERSION" | Out-File -FilePath $env:GITHUB_ENV -Append
          # Add-Content -Path $env:GITHUB_ENV -Value "name=$value"
          # Add-Content -Path $env:GITHUB_ENV -Value "APP_VERSION=$APP_VERSION"


      - name: production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: php-cli-v${{ env.APP_VERSION }}-cygwin-x64
          retention-days: 90
          path: php-cli-v${{ env.APP_VERSION }}-cygwin-x64.zip

      - name: gh release
        uses: softprops/action-gh-release@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: php-cli-v${{ env.APP_VERSION }}-cygwin-x64.zip

  upload-to-cloud-object-storage:
    if: 0
    runs-on: ubuntu-latest
    needs: windows-cygwin
    steps:
      - name: Prepare Run Environment
        run:
          sudo apt install -y curl
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - name: upload artifacts to cloud object storage
        if: ${{ 0 && (github.repository == 'swoole/swoole-cli') && (startsWith(github.ref, 'refs/tags/'))  }}
        env:
          OSS_SECRET_ID: ${{ secrets.QCLOUD_OSS_SECRET_ID }}
          OSS_SECRET_KEY: ${{ secrets.QCLOUD_OSS_SECRET_KEY }}
          OSS_BUCKET: ${{ vars.QCLOUD_OSS_BUCKET }}
          OSS_REGION: ${{ vars.QCLOUD_OSS_REGION }}
        run: |
          FILE_NAME=$(ls  -d swoole-cli-v*-cygwin-x64)
          FILE="${{ github.workspace }}/${FILE_NAME}/${FILE_NAME}.zip"
          bash sapi/scripts/tencent-cloud-object-storage.sh --upload-file ${FILE}
